{"version":3,"sources":["../../../../src/websockets/stream_handler.es6"],"names":["barsTable","setExtremePointsForXAxis","chart","startTime","endTime","xAxis","forEach","getExtremes","min","max","setExtremes","events","on","data","key","echo_req","ticks_history","granularity","toUpperCase","price","parseFloat","tick","quote","time","parseInt","epoch","chartingRequest","id","instrumentCdAndTp","open","high","low","close","insert","preTick","bars","chain","find","simplesort","limit","length","fire_event","chartIDs","i","chartID","containerIDWithHash","highcharts","series","get","addPoint","ohlc","symbol","document","trigger","open_time","timePeriod","bar","isNew","update","preOhlc","is_new","type","last","options","isDataTypeClosePriceOnly","y","callbacks","name","args","fns","cb","setTimeout","apply","undefined","push","off","index","indexOf","splice"],"mappings":"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","file":"stream_handler.js","sourcesContent":["import $ from 'jquery';\nimport liveapi from './binary_websockets';\nimport chartingRequestMap from '../charts/chartingRequestMap';\nimport 'common/util';\n\n\nconst barsTable = chartingRequestMap.barsTable;\n\nconst setExtremePointsForXAxis = (chart, startTime, endTime) => {\n   chart.xAxis.forEach((xAxis) => {\n      if (!startTime) startTime = xAxis.getExtremes().min;\n      if (!endTime) endTime = xAxis.getExtremes().max;\n      xAxis.setExtremes(startTime, endTime);\n   });\n}\n\nliveapi.events.on('tick', (data) => {\n   let key = data.echo_req.ticks_history + data.echo_req.granularity;\n   if (key && chartingRequestMap[key.toUpperCase()]) {\n      key = key.toUpperCase();\n\n      const price = parseFloat(data.tick.quote);\n      const time = parseInt(data.tick.epoch) * 1000;\n\n      const chartingRequest = chartingRequestMap[key];\n      const granularity = data.echo_req.granularity || 0;\n      chartingRequest.id = chartingRequest.id || data.tick.id;\n\n      if(granularity === 0) {\n         const tick = {\n            instrumentCdAndTp: key,\n            time: time,\n            open: price,\n            high: price,\n            low: price,\n            close: price,\n            /* this will be used from trade confirmation dialog */\n            price: data.tick.quote, /* we need the original value for tick trades */\n         }\n         barsTable.insert(tick);\n         /* notify subscribers */\n         let preTick = tick;\n         const bars = barsTable.chain()\n            .find({ instrumentCdAndTp: key })\n            .simplesort('time', true)\n            .limit(2).data();\n         if (bars.length > 1)\n            preTick = bars[1];\n         fire_event('tick', { tick: tick, key: key, preTick: preTick });\n\n         if (!(chartingRequest.chartIDs && chartingRequest.chartIDs.length > 0)) {\n            return;\n         }\n         //notify all registered charts\n         for(let i = 0; i < chartingRequest.chartIDs.length; i++) {\n            const chartID = chartingRequest.chartIDs[i];\n            const chart = $(chartID.containerIDWithHash).highcharts();\n            if (!chart) return;\n\n            const series = chart.get(key);\n            if (!series) return;\n\n            series.addPoint([time, price]);\n            //setExtremePointsForXAxis(chart, time);\n\n         };\n\n      }\n\n   }\n});\n\nliveapi.events.on('ohlc', (data) => {\n   let key = data.ohlc.symbol + data.ohlc.granularity;\n   if (key && chartingRequestMap[key.toUpperCase()]) {\n      key = key.toUpperCase();\n      // TODO: 1-consume this notification 2-do not use global notifications, use a better approach.\n      $(document).trigger(\"feedTypeNotification\", [key, \"realtime-feed\"]);\n\n      const open = parseFloat(data.ohlc.open);\n      const high = parseFloat(data.ohlc.high);\n      const low = parseFloat(data.ohlc.low);\n      const close = parseFloat(data.ohlc.close);\n      const time = parseInt(data.ohlc.open_time) * 1000;\n\n      const chartingRequest = chartingRequestMap[key];\n      chartingRequest.id = chartingRequest.id || data.ohlc.id;\n      if (!(chartingRequest.chartIDs && chartingRequest.chartIDs.length > 0)) {\n         return;\n      }\n      const timePeriod = $(chartingRequest.chartIDs[0].containerIDWithHash).data('timePeriod');\n      if (!timePeriod) {\n         return;\n      }\n\n      let bar = barsTable.chain()\n         .find({ '$and': [{instrumentCdAndTp: key}, {time : time}] })\n         .simplesort(\"time\", true)\n         .limit(1)\n         .data();\n      let isNew = false;\n      if (!bar || bar.length <= 0) {\n         bar = {\n            instrumentCdAndTp: key,\n            time: time,\n            open: open,\n            high: high,\n            low: low,\n            close: close\n         };\n         barsTable.insert(bar);\n         isNew = true;\n      } else {\n         bar = bar[0];\n         bar.open = open;\n         bar.high = high;\n         bar.low = low;\n         bar.close = close;\n         barsTable.update(bar);\n      }\n\n      let preOhlc = bar;\n      const bars = barsTable.chain()\n         .find({ instrumentCdAndTp: key })\n         .simplesort('time', true)\n         .limit(2).data();\n      if (bars.length > 1) {\n         preOhlc = bars[1];\n      }\n      /* notify subscribers */\n      fire_event('ohlc', { ohlc: bar, is_new: isNew, key: key, preOhlc: preOhlc });\n\n      //notify all registered charts\n      for(let i = 0;i < chartingRequest.chartIDs.length; i++){\n         const chartID = chartingRequest.chartIDs[i];\n         const chart = $(chartID.containerIDWithHash).highcharts();\n         if (!chart) return;\n\n         const series = chart.get(key);\n         if (!series) return;\n\n         const type = $(chartID.containerIDWithHash).data('type');\n\n         const last = series.data[series.data.length - 1];\n         if (series.options.data.length != series.data.length) {\n            //TODO - This is an error situation\n            setExtremePointsForXAxis(chart, null, bar.time);\n            return;\n         }\n\n         if (type && isDataTypeClosePriceOnly(type)) {//Only update when its not in loading mode\n            if (isNew) {\n               series.addPoint([time, close], true, true, false);\n            } else {\n               last.update({\n                  y : close\n               });\n            }\n         } else {\n            if (isNew) {\n               series.addPoint([time, open, high, low, close], true, true, false);\n            } else {\n               last.update({\n                  open : open,\n                  high : high,\n                  low : low,\n                  close : close\n               });\n            }\n         }\n      };\n   }\n});\n\nconst callbacks = { };\n/* fire a custom event and call registered callbacks(api.events.on(name)) */\nconst fire_event = (name , ...args) => {\n   const fns = callbacks[name] || [];\n   fns.forEach(\n      (cb) => setTimeout( () => cb.apply(undefined, args), 0)\n   );\n};\n\nexport const events = {\n   on: (name, cb) => {\n      (callbacks[name] = callbacks[name] || []).push(cb);\n      return cb;\n   },\n   off: (name, cb) => {\n      if(callbacks[name]) {\n         const index = callbacks[name].indexOf(cb);\n         index !== -1 && callbacks[name].splice(index, 1);\n      }\n   }\n};\nexport default {\n   events\n};\n"]}