{"version":3,"sources":["../../../../src/navigation/menu.es6"],"names":["refreshMenuRecursive","root","data","on_click","forEach","value","isDropdownMenu","submarkets","instruments","caretHtml","menuLinkHtml","display_name","$menuLink","is_disabled","addClass","newLI","append","appendTo","newUL","click","li","parent","extractFilteredMarkets","trading_times_data","options","markets","trading_times","map","m","market","name","sm","submarket","symbols","filter","sym","symbol","delay_amount","events","times","settlement","feed_license","length","extractChartableMarkets","sortMenu","sort_fn","sortAlphaNum","isArray","rank","sortBy","o","toLowerCase","sort","refreshMenu","updateDropdownToggles"],"mappings":"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","file":"menu.js","sourcesContent":["ï»¿/**\n * Created by amin on October 30, 2015.\n */\nimport $ from 'jquery';\nimport _ from 'lodash';\nimport navigation from './navigation';\nimport '../common/util';\n\n/* recursively creates menu into root element, set on_click to register menu item clicks */\nconst refreshMenuRecursive = ( root, data , on_click) => {\n   data.forEach((value) => {\n      const isDropdownMenu = value.submarkets || value.instruments;\n      const caretHtml = \"<span class='nav-submenu-caret'></span>\";\n      const menuLinkHtml = isDropdownMenu ? value.display_name + caretHtml : value.display_name;\n      const $menuLink = $(\"<a href='#'>\" + menuLinkHtml + \"</a>\");\n      if(value.is_disabled)  $menuLink.addClass('disabled');\n\n      const newLI = $(\"<li>\").append($menuLink);\n      if(!isDropdownMenu) {\n         newLI.data(value); /* example use => newLI.data('symbol'), newLI.data('delay_amount'), newLI.data('display_name') */\n      }\n      newLI.appendTo( root);\n\n      if (isDropdownMenu) {\n         const newUL = $(\"<ul>\");\n         newUL.appendTo(newLI);\n         refreshMenuRecursive( newUL, value.submarkets || value.instruments, on_click );\n      }\n      else if(on_click && !value.is_disabled)\n         $menuLink.click(function () {\n            /* pass the <li> not the <a> tag */\n            const li = $(this).parent();\n            on_click(li);\n         });\n   });\n}\n\n/* you can filter the symbols with the options parameter, for example:\n   options: {\n       filter: (sym) => (sym.feed_license !== 'realtime')\n   }\n*/\nexport const extractFilteredMarkets = (trading_times_data, options) => {\n   const markets = trading_times_data.trading_times.markets.map((m) => {\n      const market = {\n         name: m.name,\n         display_name: m.name\n      };\n      market.submarkets = m.submarkets.map((sm) => {\n         const submarket = {\n            name: sm.name,\n            display_name: sm.name\n         };\n         let symbols = sm.symbols;\n         if (options && options.filter) /* filter the symbols */\n            symbols = symbols.filter(options.filter);\n         submarket.instruments = symbols.map((sym) => {\n            return {\n               symbol: sym.symbol,\n               display_name: sym.name,\n               delay_amount: sym.delay_amount || 0,\n               events: sym.events,\n               times: sym.times,\n               settlement: sym.settlement,\n               feed_license: sym.feed_license || 'realtime'\n            };\n         });\n         return submarket;\n      })\n      /* there might be a submarket (e.g \"Americas\") which does not have any symbols after filtering */\n         .filter(\n            (sm) => (sm.instruments.length > 0)\n         );\n      return market;\n   });\n\n   return markets;\n};\n\nexport const extractChartableMarkets = (trading_times_data) => {\n   return extractFilteredMarkets(trading_times_data, {\n      filter: (sym) => (sym.feed_license !== 'chartonly')\n   }) || [];\n};\n\nexport const sortMenu = (markets) => {\n   const sort_fn = sortAlphaNum('display_name');\n   //Sort market\n   if($.isArray(markets)) {\n\n      const rank = { \"forex\": 1, \"indices\": 2, \"stocks\": 3, \"commodities\": 4, \"volidx\": 5 };\n      markets = _.sortBy( markets, (o) => rank[o.name.toLowerCase()]);\n      markets.forEach((market) => {\n         if($.isArray(market.submarkets)) {\n            // Sort sub-markets\n            market.submarkets.sort(sort_fn);\n            market.submarkets.forEach((submarket) => {\n               if($.isArray(submarket.instruments)) {\n                  // Sort instruments\n                  submarket.instruments.sort(sort_fn);\n               }\n            });\n         }\n      });\n   }\n   return markets;\n};\n\nexport const refreshMenu = (root,data,on_click) => {\n   refreshMenuRecursive(root, data, on_click);\n   navigation.updateDropdownToggles();\n}\n\nexport default {\n   extractChartableMarkets,\n   extractFilteredMarkets,\n   sortMenu,\n   refreshMenu\n};\n"]}