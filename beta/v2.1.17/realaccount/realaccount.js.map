{"version":3,"sources":["../../../../src/realaccount/realaccount.es6"],"names":["real_win","real_win_view","real_win_li","error_handler","err","console","error","growl","message","init","li","click","getLandingCompany","then","what_todo","init_real_win","catch","moveToTop","root","i18n","_title","createBlankWindow","title","resizable","collapsable","minimizable","maximizable","width","height","close","dialog","trigger","remove","open","destroy","unbind","init_state","offset","top","my","left","at","css","app_id","state","route","value","empty_fields","validate","clear","debounce","show","input_disabled","risk","visible","user","disabled","accepted","pep","salutation","salutation_array","account_opening_reason_array","account_opening_reason","first_name","last_name","date_of_birth","yearRange","showButtonPanel","residence","residence_name","address_line_1","address_line_2","city_address","state_address","state_address_array","text","address_postcode","phone","secret_question_inx","secret_question_array","secret_answer","place_of_birth","country_array","tax_residence","tax_identification_number","financial","experience_array","frequency_array","forex_trading_experience","forex_trading_frequency","indices_trading_experience","indices_trading_frequency","commodities_trading_experience","commodities_trading_frequency","stocks_trading_experience","stocks_trading_frequency","other_derivatives_trading_experience","other_derivatives_trading_frequency","other_instruments_trading_experience","other_instruments_trading_frequency","employment_industry_array","employment_industry","education_level_array","education_level","income_source_array","income_source","net_income_array","net_income","estimated_worth_array","estimated_worth","account_turnover_array","account_turnover","occupation_array","occupation","employment_status","employment_status_array","source_of_wealth","source_of_wealth_array","local_storage","get","reduce","a","b","test","id","is_valid","isValid","new_account_real","update","request","undefined","address_city","address_state","secret_question","replace","send","data","info","oauth","push","client_id","token","oauth_token","is_virtual","set","notice","switch_account","hide","pep_window","e","preventDefault","modal","closeOnEscape","create_request","new_account_maltainvest","join","affiliate_token","accept_risk","warn","accept","decline","bind","residence_promise","get_settings","unix","format","subtract","country_code","country","cached","residence_list","find","phone_idd","states_list"],"mappings":"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","file":"realaccount.js","sourcesContent":["/*\n * Created by amin on June 14, 2016.\n */\n\nimport $ from 'jquery';\nimport liveapi from 'websockets/binary_websockets';\nimport windows from 'windows/windows';\nimport rv from 'common/rivetsExtra';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport navigation from 'navigation/navigation';\nimport html from 'text!realaccount/realaccount.html';\nimport 'css!realaccount/realaccount.css';\n\nlet real_win = null;\nlet real_win_view = null; // rivets view\nlet real_win_li = null;\n\nconst error_handler = (err) => {\n   console.error(err);\n   $.growl.error({ message: err.message });\n};\n\nexport const init = (li) => {\n   real_win_li = li;\n   li.click(() => {\n      if (!real_win) {\n         navigation.getLandingCompany()\n            .then(\n            (what_todo) => init_real_win(html, what_todo)\n            )\n            .catch(error_handler);\n      } else {\n         real_win.moveToTop();\n      }\n   });\n}\n\nconst init_real_win = (root, what_todo) => {\n   root = $(root).i18n();\n   const _title = {\n      'upgrade-mlt': 'Real Money Account Opening'.i18n(),\n      'upgrade-mf': 'Financial Account Opening form'.i18n()\n   }[what_todo];\n\n   real_win = windows.createBlankWindow(root, {\n      title: _title,\n      resizable: false,\n      collapsable: false,\n      minimizable: true,\n      maximizable: false,\n      width: 380,\n      height: 400,\n      close: () => {\n         real_win.dialog('destroy');\n         real_win.trigger('dialogclose'); // TODO: figure out why event is not fired.\n         real_win.remove();\n         real_win = null;\n      },\n      open: () => { },\n      destroy: () => {\n         real_win_view && real_win_view.unbind();\n         real_win_view = null;\n      }\n   });\n\n   init_state(root, what_todo);\n   real_win.dialog('open');\n\n   /* update dialog position, this way when dialog is resized it will not move*/\n   const offset = real_win.dialog('widget').offset();\n   offset.top = 110;\n   real_win.dialog(\"option\", \"position\", { my: offset.left, at: offset.top });\n   real_win.dialog('widget').css({\n      left: offset.left + 'px',\n      top: offset.top + 'px'\n   });\n}\n\nconst init_state = (root, what_todo) => {\n   const app_id = liveapi.app_id;\n   const state = {\n      route: { value: 'user' }, // routes: ['user', 'financial']\n      empty_fields: {\n         validate: false,\n         clear: _.debounce(() => {\n            state.empty_fields.validate = false;\n         }, 4000),\n         show: () => {\n            state.empty_fields.validate = true;\n            state.empty_fields.clear();\n         }\n      },\n      what_todo: what_todo,\n      input_disabled: false,\n      risk: {\n         visible: false,\n      },\n      user: {\n         disabled: false,\n         accepted: what_todo === 'upgrade-mf',\n         pep: false,\n         salutation: 'Mr',\n         salutation_array: ['Mr', 'Mrs', 'Ms', 'Miss'],\n         account_opening_reason_array: ['Speculative', 'Income Earning', 'Assets Saving', 'Hedging'],\n         account_opening_reason: '',\n         first_name: '',\n         last_name: '',\n         date_of_birth: '',\n         yearRange: \"-100:+0\",\n         showButtonPanel: false, // for jquery ui datepicker\n         residence: '-',\n         residence_name: '-',\n         address_line_1: '',\n         address_line_2: '',\n         city_address: '',\n         state_address: '-',\n         state_address_array: [{ text: '-', value: '-' }],\n         address_postcode: '',\n         phone: '',\n         secret_question_inx: 5,\n         secret_question_array: [\n            'Mother\\'s maiden name', 'Name of your pet', 'Name of first love',\n            'Memorable town/city', 'Memorable date', 'Favourite dish',\n            'Brand of first car', 'Favourite artist'\n         ],\n         secret_answer: '',\n         place_of_birth: '-',\n         country_array: [{ text: '-', value: '-' }],\n         tax_residence: '',\n         tax_identification_number: ''\n\n      },\n      financial: {\n         experience_array: ['0-1 year', '1-2 years', 'Over 3 years'],\n         frequency_array: ['0-5 transactions in the past 12 months', '6-10 transactions in the past 12 months', '40 transactions or more in the past 12 months'],\n         forex_trading_experience: '',\n         forex_trading_frequency: '',\n         indices_trading_experience: '',\n         indices_trading_frequency: '',\n         commodities_trading_experience: '',\n         commodities_trading_frequency: '',\n         stocks_trading_experience: '',\n         stocks_trading_frequency: '',\n         other_derivatives_trading_experience: '',\n         other_derivatives_trading_frequency: '',\n         other_instruments_trading_experience: '',\n         other_instruments_trading_frequency: '',\n\n         employment_industry_array: ['Construction', 'Education', 'Finance', 'Health', 'Tourism', 'Other'],\n         employment_industry: '',\n         education_level_array: ['Primary', 'Secondary', 'Tertiary'],\n         education_level: '',\n\n         income_source_array: ['Salaried Employee', 'Self-Employed', 'Investments & Dividends', 'Pension', 'Other'],\n         income_source: '',\n\n         net_income_array: ['Less than $25,000', '$25,000 - $50,000', '$50,001 - $100,000', '$100,001 - $500,000', 'Over $500,000'],\n         net_income: '',\n\n         estimated_worth_array: ['Less than $100,000', '$100,000 - $250,000', '$250,001 - $500,000', '$500,001 - $1,000,000', 'Over $1,000,000'],\n         estimated_worth: '',\n\n         account_turnover_array: ['Less than $25,000', '$25,000 - $50,000', '$50,001 - $100,000', '$100,001 - $500,000', 'Over $500,000'],\n         account_turnover: '',\n\n         occupation_array: [\"Chief Executives, Senior Officials and Legislators\", \"Managers\", \"Professionals\", \"Clerks\",\n            \"Personal Care, Sales and Service Workers\", \"Agricultural, Forestry and Fishery Workers\",\n            \"Craft, Metal, Electrical and Electronics Workers\", \"Plant and Machine Operators and Assemblers\",\n            \"Mining, Construction, Manufacturing and Transport Workers\", \"Armed Forces\", \"Government Officers\",\n            \"Others\"\n         ],\n         occupation: '',\n\n         employment_status: '',\n         employment_status_array: [\"Employed\", \"Pensioner\", \"Self-Employed\", \"Student\", \"Unemployed\"],\n\n         source_of_wealth: '',\n         source_of_wealth_array: [\"Accumulation of Income/Savings\", \"Cash Business\", \"Company Ownership\", \"Divorce Settlement\", \"Inheritance\", \"Investment Income\", \"Sale of Property\", \"Other\"],\n\n         accepted: false,\n         disabled: false\n      }\n   };\n\n   state.input_disabled = local_storage.get(\"oauth\").reduce((a, b) => {\n      return a || /MLT/.test(b.id)\n   }, false) && what_todo === \"upgrade-mf\";\n\n   state.user.is_valid = () => {\n      const user = state.user;\n      return state.user.account_opening_reason !== '' && user.first_name !== '' &&\n         !/[~`!@#\\$%\\^\\&\\*\\(\\)\\+=\\{\\}\\[\\]\\\\|:;\\\",<>?/\\d]/.test(user.first_name) &&\n         user.last_name !== '' &&\n         !/[~`!@#\\$%\\^\\&\\*\\(\\)\\+=\\{\\}\\[\\]\\\\|:;\\\",<>?/\\d]/.test(user.last_name) &&\n         moment(user.date_of_birth, 'YYYY-MM-DD', true).isValid() &&\n         user.residence !== '-' &&\n         user.address_line_1 !== '' &&\n         !/[~`!#\\$%\\^\\&\\*\\(\\)\\+=\\{\\}\\[\\]\\\\|:;\\\"<>?]/.test(user.address_line_1) &&\n         !/[~`!#\\$%\\^\\&\\*\\(\\)\\+=\\{\\}\\[\\]\\\\|:;\\\"<>?]/.test(user.address_line_2) &&\n         user.city_address !== '' &&\n         !/[~`!@#\\$%\\^\\&\\*\\(\\)\\+=\\{\\}\\[\\]\\\\|:;\\\",<>?/\\d]/.test(user.city_address) &&\n         /^[^+]{0,20}$/.test(user.address_postcode) &&\n         user.phone !== '' && /^\\+?[0-9\\s]{6,35}$/.test(user.phone) &&\n         (state.input_disabled || /.{4,8}$/.test(user.secret_answer)) && // Check secret answer if mlt account\n         (state.what_todo != \"upgrade-mf\" || (state.user.place_of_birth &&\n            state.user.tax_residence && state.user.tax_identification_number && /^[\\w-]{0,20}$/.test(state.user.tax_identification_number)));\n   };\n\n   state.user.click = () => {\n      if (!state.user.is_valid()) {\n         state.empty_fields.show();\n         return;\n      }\n\n      if (state.what_todo === 'upgrade-mlt') {\n         state.user.new_account_real();\n         return;\n      }\n\n      state.route.update('financial');\n   }\n   state.user.new_account_real = () => {\n\n      const user = state.user;\n      const request = {\n         new_account_real: 1,\n         salutation: user.salutation,\n         first_name: user.first_name,\n         last_name: user.last_name,\n         account_opening_reason: user.account_opening_reason,\n         date_of_birth: user.date_of_birth,\n         residence: user.residence,\n         address_line_1: user.address_line_1,\n         address_line_2: user.address_line_2 || undefined, // optional field\n         address_city: user.city_address,\n         address_state: user.state_address || undefined,\n         address_postcode: user.address_postcode || undefined,\n         phone: user.phone,\n         secret_question: user.secret_question_array[user.secret_question_inx],\n         secret_answer: user.secret_answer.replace('\"\"', \"'\")\n      };\n\n      state.user.disabled = true;\n      liveapi.send(request)\n         .then((data) => {\n            state.user.disabled = false;\n            const info = data.new_account_real;\n            const oauth = local_storage.get('oauth');\n            oauth.push({ id: info.client_id, token: info.oauth_token, is_virtual: 0 });\n            local_storage.set('oauth', oauth);\n            $.growl.notice({ message: 'Account successfully created' });\n            $.growl.notice({ message: 'Switching to your new account ...' });\n            /* login with the new account */\n            return liveapi.switch_account(info.client_id)\n               .then(() => {\n                  real_win && real_win.dialog('close');\n                  real_win_li.hide();\n               });\n         })\n         .catch((err) => {\n            state.user.disabled = false;\n            error_handler(err);\n         });\n   };\n\n   state.financial.empty_fields = () => {\n      return state.financial.forex_trading_experience === '' ||\n         state.financial.forex_trading_frequency === '' || state.financial.indices_trading_experience === '' ||\n         state.financial.indices_trading_frequency === '' || state.financial.commodities_trading_experience === '' ||\n         state.financial.commodities_trading_frequency === '' || state.financial.stocks_trading_experience === '' ||\n         state.financial.stocks_trading_frequency === '' || state.financial.other_derivatives_trading_experience === '' ||\n         state.financial.other_derivatives_trading_frequency === '' || state.financial.other_instruments_trading_experience === '' ||\n         state.financial.other_instruments_trading_frequency === '' || state.financial.employment_industry === '' ||\n         state.financial.occupation === '' || state.financial.education_level === '' ||\n         state.financial.income_source === '' || state.financial.net_income === '' ||\n         state.financial.account_turnover === '' || state.financial.estimated_worth === '' ||\n         state.financial.employment_status === '' || state.financial.source_of_wealth === '';;\n   };\n\n   state.user.pep_window = (e) => {\n      e.preventDefault();\n      const text = `A Politically Exposed Person (PEP) is an individual who is or has been entrusted with a prominent public function including his/her immediate family members or persons known to be close associates of such persons, but does not include middle ranking or more junior officials.<br><br>\n         Such individuals include Heads of State, Ministers, Parliamentary Secretaries, Members of Parliament, Judges, Ambassadors, Senior Government Officials, High Ranking Officers in the Armed Forces, Audit Committees of the boards of central banks, and Directors of state-owned corporations.<br><br>\n         The “immediate family members” of the above examples will also be considered as PEP, and these include their spouses/partners, parents, and children. Additionally, “persons known to be close associates” of PEPs include their business partners, will also be considered as such.<br><br>\n         As a general rule, a person considered to be a PEP and who has ceased to be entrusted with a prominent public function for a period of at least twelve months no longer qualifies as a PEP.`;\n      windows.createBlankWindow(`<div style=\"padding:15px;\">${text}</div>`, {\n         title: \"PEP\",\n         modal: true,\n         resizable: false,\n         collapsable: false,\n         minimizable: false,\n         maximizable: false,\n         closeOnEscape: true,\n         width: 500,\n         height: 'auto'\n      }).dialog(\"open\");\n   }\n\n   state.financial.click = () => {\n      if (state.financial.empty_fields()) {\n         state.empty_fields.show();\n         $.growl.error({ message: 'Not all financial information are completed' });\n         return;\n      }\n      if (!state.financial.accepted) {\n         $.growl.error({ message: 'Binary.com terms and conditions unchecked.' });\n         return;\n      }\n\n      state.risk.visible = true;\n   };\n   state.financial.create_request = () => {\n      const user = state.user;\n      const financial = state.financial;\n      const request = {\n         new_account_maltainvest: 1,\n         salutation: user.salutation,\n         first_name: user.first_name,\n         account_opening_reason: user.account_opening_reason,\n         last_name: user.last_name,\n         date_of_birth: user.date_of_birth,\n         residence: user.residence,\n         address_line_1: user.address_line_1,\n         address_line_2: user.address_line_2 || undefined, // optional field\n         address_city: user.city_address,\n         address_state: user.state_address || undefined,\n         address_postcode: user.address_postcode || undefined,\n         phone: user.phone,\n         place_of_birth: state.user.place_of_birth,\n         tax_residence: state.user.tax_residence.join(\",\"),\n         tax_identification_number: state.user.tax_identification_number,\n\n         affiliate_token: '',\n         forex_trading_experience: financial.forex_trading_experience,\n         forex_trading_frequency: financial.forex_trading_frequency,\n         indices_trading_experience: financial.indices_trading_experience,\n         indices_trading_frequency: financial.indices_trading_frequency,\n         commodities_trading_experience: financial.commodities_trading_experience,\n         commodities_trading_frequency: financial.commodities_trading_frequency,\n         stocks_trading_experience: financial.stocks_trading_experience,\n         stocks_trading_frequency: financial.stocks_trading_frequency,\n         other_derivatives_trading_experience: financial.other_derivatives_trading_experience,\n         other_derivatives_trading_frequency: financial.other_derivatives_trading_frequency,\n         other_instruments_trading_experience: financial.other_instruments_trading_experience,\n         other_instruments_trading_frequency: financial.other_instruments_trading_frequency,\n         employment_industry: financial.employment_industry,\n         occupation: financial.occupation,\n         education_level: financial.education_level,\n         income_source: financial.income_source,\n         net_income: financial.net_income,\n         estimated_worth: financial.estimated_worth,\n         employment_status: financial.employment_status,\n         source_of_wealth: financial.source_of_wealth,\n         account_turnover: financial.account_turnover,\n         accept_risk: 1,\n      };\n      return request;\n   };\n\n   state.financial.new_account_maltainvest = () => {\n      const request = state.financial.create_request();\n      console.warn(request);\n   }\n\n   state.risk.accept = () => {\n      const request = state.financial.create_request();\n      if (!state.input_disabled) {\n         request.secret_question = state.user.secret_question_array[state.user.secret_question_inx];\n         request.secret_answer = state.user.secret_answer;\n      }\n      state.risk.visible = false;\n      state.financial.disabled = true;\n      liveapi.send(request)\n         .then((data) => {\n            const info = data.new_account_maltainvest;\n            const oauth = local_storage.get('oauth');\n            oauth.push({ id: info.client_id, token: info.oauth_token, is_virtual: 0 });\n            local_storage.set('oauth', oauth);\n            $.growl.notice({ message: 'Account successfully created' });\n            $.growl.notice({ message: 'Switching to your new account ...' });\n            /* login with the new account */\n            return liveapi.switch_account(info.client_id)\n               .then(() => {\n                  real_win && real_win.dialog('close');\n                  real_win_li.hide();\n               });\n         })\n         .catch((err) => {\n            state.financial.disabled = false;\n            error_handler(err);\n         });\n   }\n   state.risk.decline = () => {\n      state.risk.visible = false;\n   }\n\n   state.route.update = (route) => {\n      state.route.value = route;\n      //real_win.dialog('option', 'height', routes[route]);\n      real_win.dialog('widget').trigger('dialogresizestop');\n   };\n\n   real_win_view = rv.bind(root[0], state);\n\n   /* get the residence field and its states */\n   const residence_promise = liveapi.send({ get_settings: 1 })\n      .then((data) => {\n         data = data.get_settings;\n         state.user.salutation = data.salutation || state.user.salutation;\n         state.user.first_name = data.first_name || '';\n         state.user.last_name = data.last_name || '';\n         state.user.account_opening_reason = data.account_opening_reason || '';\n         state.user.date_of_birth = data.date_of_birth ? moment.unix(data.date_of_birth).format(\"YYYY-MM-DD\") : moment().subtract(18, \"years\").format(\"YYYY-MM-DD\");\n         state.user.address_line_1 = data.address_line_1 || '';\n         state.user.address_line_2 = data.address_line_2 || '';\n         state.user.city_address = data.address_city || '';\n         state.user.state_address = data.address_state || '';\n         state.user.address_postcode = data.address_postcode || '';\n         state.user.phone = data.phone || '';\n         state.user.residence = data.country_code || '';\n         state.user.residence_name = data.country || '';\n      })\n      .catch(error_handler);\n\n   residence_promise\n      .then(\n      () => liveapi.cached.send({ residence_list: 1 })\n      )\n      .then((data) => {\n         state.user.country_array = data.residence_list;\n         state.user.place_of_birth = data.residence_list[0].value;\n         const residence = _.find(data.residence_list, { value: state.user.residence });\n         state.user.phone = state.user.phone ? state.user.phone : '+' + residence.phone_idd;\n      })\n      .catch(error_handler);\n\n   residence_promise\n      .then(\n      () => liveapi.cached.send({ states_list: state.user.residence })\n      )\n      .then((data) => {\n         state.user.state_address_array = [{ text: 'Please select', value: '' }, ...data.states_list];\n         state.user.state_address = state.user.state_address_array[0].value;\n      })\n      .catch(error_handler);\n}\n\nexport default { init }\n"]}