{"version":3,"sources":["../../../../../../src/charts/draw/highcharts_custom/circle.es6"],"names":["isLibraryLoaded","currentObject","init","wrap","Pointer","prototype","c","e","chart","renderer","annotate","bbox","container","getBoundingClientRect","pointer","normalize","startX","chartX","xAxis","toPixels","startY","chartY","yAxis","endX","endY","radius","Math","sqrt","pow","seriesGroup","series","group","circle","attr","add","one","r","call"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;AAMA,OAAIA,kBAAkB,KAAtB;AAAA,OACGC,gBAAgB,IADnB;;AAGO,OAAMC,sBAAO,SAAPA,IAAO,GAAW;;AAE5B,UAAIF,eAAJ,EAAqB;AACrB;;;;;;;;;;;AAWA;AACA,0BAAEG,IAAF,CAAO,oBAAEC,OAAF,CAAUC,SAAjB,EAA4B,MAA5B,EAAoC,UAASC,CAAT,EAAYC,CAAZ,EAAe;AAChD,aAAMC,QAAQ,KAAKA,KAAnB;AACA,aAAMC,WAAWD,MAAMC,QAAvB;AACA,aAAID,MAAME,QAAV,EAAoB;AACjB,gBAAMC,OAAOH,MAAMI,SAAN,CAAgBC,qBAAhB,EAAb;AACAN,gBAAIC,MAAMM,OAAN,CAAcC,SAAd,EAAJ;AACA,gBAAId,iBAAiB,IAArB,EAA2B;;AAExB,mBAAIe,SAAST,EAAEU,MAAf;AACA;AACAD,wBAASR,MAAMU,KAAN,CAAY,CAAZ,EAAeC,QAAf,CAAwBH,MAAxB,CAAT;AACA,mBAAII,SAASb,EAAEc,MAAf;AACAD,wBAASZ,MAAMc,KAAN,CAAY,CAAZ,EAAeH,QAAf,CAAwBC,MAAxB,CAAT;AACA,mBAAMG,OAAOP,MAAb;AACA,mBAAMQ,OAAOJ,MAAb;AACA,mBAAMK,SAASC,KAAKC,IAAL,CAAUD,KAAKE,GAAL,CAASZ,SAASO,IAAlB,EAAwB,CAAxB,IAA6BG,KAAKE,GAAL,CAASR,SAASI,IAAlB,EAAwB,CAAxB,CAAvC,CAAf;;AAEA,mBAAMK,cAAc,KAAKrB,KAAL,CAAWsB,MAAX,CAAkB,CAAlB,EAAqBC,KAAzC;AACA9B,+BAAgBQ,SAASuB,MAAT,CAAgBhB,MAAhB,EAAwBI,MAAxB,EAAgCK,MAAhC,EAAwCQ,IAAxC,CAA6C;AAC1D,0BAAQ,mBADkD;AAE1D,4BAAU,OAFgD;AAG1D,kCAAgB;AAH0C,gBAA7C,EAIbC,GAJa,CAITL,WAJS,CAAhB;AAKA,qCAAErB,MAAMI,SAAR,EAAmBuB,GAAnB,CAAuB,SAAvB,EAAkC,YAAW;AAC1C3B,wBAAME,QAAN,GAAiB,KAAjB;AACAT,kCAAgB,IAAhB;AACF,gBAHD;AAKF,aAtBD,MAsBO;;AAEJ,mBAAMe,UAASf,cAAcgC,IAAd,CAAmB,IAAnB,CAAf;AACA,mBAAMb,UAASnB,cAAcgC,IAAd,CAAmB,IAAnB,CAAf;AACA,mBAAIV,QAAOhB,EAAEU,MAAb;AACAM,uBAAOf,MAAMU,KAAN,CAAY,CAAZ,EAAeC,QAAf,CAAwBI,KAAxB,CAAP;AACA,mBAAIC,QAAOjB,EAAEc,MAAb;AACAG,uBAAOhB,MAAMU,KAAN,CAAY,CAAZ,EAAeC,QAAf,CAAwBK,KAAxB,CAAP;AACA,mBAAMC,UAASC,KAAKC,IAAL,CAAUD,KAAKE,GAAL,CAASZ,UAASO,KAAlB,EAAwB,CAAxB,IAA6BG,KAAKE,GAAL,CAASR,UAASI,KAAlB,EAAwB,CAAxB,CAAvC,CAAf;AACAvB,6BAAcgC,IAAd,CAAmB;AAChBG,qBAAGX;AADa,gBAAnB;AAIF;AACH,UAvCD,MAuCO;AACJnB,cAAE+B,IAAF,CAAO,IAAP,EAAa9B,CAAb;AACF;AACH,OA7CD;;AA+CA;AACA;AACA;AACA;;AAEAP,wBAAkB,IAAlB;AAEF,IArEM;;qBAuEQ;AACbE;AADa,I","file":"circle.js","sourcesContent":["/**\n * Created by arnab on 4/3/15.\n */\nimport H from 'highstock';\nimport $ from 'jquery';\n\nlet isLibraryLoaded = false,\n   currentObject = null;\n\nexport const init = function() {\n\n   if (isLibraryLoaded) return;\n   /*\n     - When not annnotating, allow dragging of chart or zooming\n     - Have to annotate chart where it got triggered from\n     TODO\n     - check if the drag is inside chart container\n     - Glow the object when hover over\n     - Should be able to hold and move the objects\n     - Change mouse cursor to square when inside the chart area\n     - Escape should remove the annotate mode\n   */\n\n   // when drawing annotation, don't zoom/select place\n   H.wrap(H.Pointer.prototype, 'drag', function(c, e) {\n      const chart = this.chart;\n      const renderer = chart.renderer;\n      if (chart.annotate) {\n         const bbox = chart.container.getBoundingClientRect();\n         e = chart.pointer.normalize();\n         if (currentObject == null) {\n\n            let startX = e.chartX;\n            // translate my coordinates to pixel values\n            startX = chart.xAxis[0].toPixels(startX)\n            let startY = e.chartY;\n            startY = chart.yAxis[0].toPixels(startY);\n            const endX = startX;\n            const endY = startY;\n            const radius = Math.sqrt(Math.pow(startX - endX, 2) + Math.pow(startY - endY, 2));\n\n            const seriesGroup = this.chart.series[0].group;\n            currentObject = renderer.circle(startX, startY, radius).attr({\n               'fill': 'rgba(255,0,0,0.4)',\n               'stroke': 'black',\n               'stroke-width': 2\n            }).add(seriesGroup);\n            $(chart.container).one(\"mouseup\", function() {\n               chart.annotate = false;\n               currentObject = null;\n            });\n\n         } else {\n\n            const startX = currentObject.attr(\"cx\");\n            const startY = currentObject.attr(\"cy\");\n            let endX = e.chartX;\n            endX = chart.xAxis[0].toPixels(endX);\n            let endY = e.chartY;\n            endY = chart.xAxis[0].toPixels(endY);\n            const radius = Math.sqrt(Math.pow(startX - endX, 2) + Math.pow(startY - endY, 2));\n            currentObject.attr({\n               r: radius\n            });\n\n         }\n      } else {\n         c.call(this, e);\n      }\n   });\n\n   // update annotations after chart redraw\n   // Highcharts.addEvent(chart, 'redraw', function () {\n   //   console.log('Redraw called - I am in circle.js!');\n   // });\n\n   isLibraryLoaded = true;\n\n}\n\nexport default {\n  init\n}\n"]}