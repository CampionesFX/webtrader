{"version":3,"sources":["../../../../src/affiliates/affiliates.es6"],"names":["init_chart_options","dialog","timePeriod","type","instrumentName","instrumentCode","hideShare","hideOverlay","id","attr","table_view","init","offset","show","formatCheck","RegExp","tzString","getParameterByName","toUpperCase","replace","test","tzValue","split","hours","parseInt","minutes","Highcharts","setOptions","global","timezoneOffset","plotOptions","candlestick","lineColor","color","upColor","upLineColor","addClass","newTabId","$html","i18n","find","end","then","_instrumentJSON","isEmptyObject","instrumentObject","getObjects","length","symbol","display_name","validateParameters","delayAmount","delay_amount","isHideOverlay","isHideShare","options","name","add_chart_options","drawChart","defer","triggerReflow","on","e","window","growl","error","message","hide","catch","console","log","append","height","width","resize"],"mappings":"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","file":"affiliates.js","sourcesContent":["/**\n * URL parameters\n\t affiliates - true/false\n\t instrument - e.g, frxUSDJPY\n\t timePeriod - 1t, 1m, 2m, 3m, 5m, 10, 15m, 30m, 1h, 2h, 4h, 8h, 1d\n\t lang - en, de, etc - Any supported lang code\n\t hideOverlay - true/false\n\t hideShare - true/false\n\t timezone\n \t chartContainerID - chart container ID which will have chart header and highchart chart\n */\nimport $ from 'jquery';\nimport liveapi from '../websockets/binary_websockets';\nimport menu from '../navigation/menu';\nimport _ from 'lodash';\nimport '../common/util';\nimport chartOptions from '../charts/chartOptions';\nimport tableView from \"../charts/tableView\";\nimport html from 'text!../charts/chartWindow.html';\nimport charts from '../charts/charts';\nimport instruments from '../instruments/instruments';\nimport 'jquery-growl';\nimport chartWindow from '../charts/chartWindow';\n\nconst init_chart_options = (dialog, timePeriod, type, instrumentName, instrumentCode, hideShare, hideOverlay) => {\n    const id = dialog.attr('id');\n    /* initialize chartOptions & table-view once chart is rendered */\n    const table_view = tableView.init(dialog, offset);\n    chartOptions.init(id, timePeriod, type, table_view.show, instrumentName, instrumentCode, !hideShare, !hideOverlay);\n};\n\n//Check for format of timezone eg: (GMT+5.30)\nconst formatCheck = new RegExp(/^(GMT[\\+|-])\\d{1,2}(\\.\\d{1,2})*$/),\n    tzString = getParameterByName(\"timezone\").toUpperCase().replace(\" \", \"+\"); //Browsers change '+' in url to \" \"\nlet offset = 0;\n\nif (formatCheck.test(tzString)) {\n    const tzValue = tzString.split(\"GMT\")[1],\n        hours = parseInt(tzValue.split(\".\")[0]),\n        minutes = tzValue.split(\".\")[1] ? hours > 0 ? parseInt(tzValue.split(\".\")[1]) : parseInt(tzValue.split(\".\")[1]) * -1 : 0;\n    offset = (-1) * (hours * 60 + minutes);\n}\n\nHighcharts.setOptions({\n    global: {\n        timezoneOffset: offset // Changing time zone.\n    },\n    plotOptions: {\n        candlestick: {\n            lineColor: 'rgba(0,0,0,1)',\n            color: 'rgba(215,24,24,1)',\n            upColor: 'rgba(2,146,14,1)',\n            upLineColor: 'rgba(0,0,0,1)'\n        }\n    }\n});\n\nexport const init = () => {\n    /* when we are on affiliates route we need to disable overflow-x */\n    $('body').addClass('affiliates');\n\n    // get chart window html.\n    const newTabId = getParameterByName('chartContainerID') || \"webtrader-dialog-1\",\n        timePeriod = getParameterByName('timePeriod') || '1d',\n        type = timePeriod == '1t' ? 'line' : 'candlestick';\n\n    //if chart was already initialized, then first destroy them\n    const $html = $(html).i18n();\n    $html.attr(\"id\", newTabId)\n        .find('div.chartSubContainerHeader').attr('id', newTabId + \"_header\").end()\n        .find('div.chartSubContainer').attr('id', newTabId + \"_chart\").end();\n\n    // load market information (instruments) from API.\n    //Trigger async loading of instruments and trade menu and refresh\n    instruments\n        .init()\n        .then((_instrumentJSON) => {\n            if (!$.isEmptyObject(_instrumentJSON)) {\n                const instrumentCode = getParameterByName('instrument');\n                const instrumentObject = getObjects(_instrumentJSON, 'symbol', instrumentCode);\n                if (instrumentObject && instrumentObject.length > 0 && instrumentObject[0].symbol && instrumentObject[0].display_name) {\n                    // validate the parameters here.\n                    if (validateParameters()) {\n                        const instrumentCode = instrumentObject[0].symbol;\n                        const instrumentName = instrumentObject[0].display_name;\n                        const delayAmount = instrumentObject[0].delay_amount || 0;\n                        /* @@url-param\n                         * hideOverlay(boolean) - used for hiding comparison in chart options\n                         * hideShare(boolean) - used for hidinig share in chart options.\n                         * timezone(GMT+5.30) - get timezone.\n                         */\n                        const hideOverlay = isHideOverlay(),\n                            hideShare = isHideShare();\n                        //Render in normal way\n                        const options = {\n                            instrumentCode: instrumentCode,\n                            instrumentName: instrumentName,\n                            timePeriod: timePeriod,\n                            type: type,\n                            delayAmount: delayAmount,\n                            name: newTabId\n                        };\n                        chartWindow.add_chart_options(newTabId, options);\n                        charts.drawChart(\"#\" + newTabId + \"_chart\", {\n                            instrumentCode: instrumentCode,\n                            instrumentName: instrumentName,\n                            timePeriod: timePeriod,\n                            type: type,\n                            delayAmount: delayAmount\n                        });\n                        init_chart_options($html, timePeriod, type, instrumentName, instrumentCode, hideShare, hideOverlay);\n                        _.defer(() => {\n                            charts.triggerReflow(\"#\" + newTabId + \"_chart\");\n                            //This is used to notify any affiliate who might want to listen for timePeriod change \n                            $('#' + newTabId).on('chart-time-period-changed', (e, timePeriod) => {\n                                window['timePeriodChangeListener'] && window['timePeriodChangeListener'](timePeriod);\n                            });\n                        });\n                    } else {\n                        $.growl.error({\n                            message: \"Invalid parameter(s)!\".i18n()\n                        });\n                        $html.find('div.chartSubContainerHeader').hide();\n                    }\n                } else {\n                    $.growl.error({\n                        message: \"Instrument Code Unknown/Unavailable!\".i18n()\n                    });\n                    $html.find('div.chartSubContainerHeader').hide();\n                }\n            }\n        })\n        .catch((e) => {\n            console.log(e);\n            $.growl.error({\n                message: \"Error getting market information!\".i18n()\n            });\n            $html.find('div.chartSubContainerHeader').hide();\n        });\n\n    $(\".mainContainer\").append($html);\n    $('#' + newTabId + \" .chartSubContainer\").height($(window).height() - 50).width($(window).width());\n    $('#' + newTabId + \" .table-view\").width($(window).width());\n    $(window).resize(() => {\n        $('#' + newTabId + \" .chartSubContainer\").height($(window).height() - 50).width($(window).width());\n        $('#' + newTabId + \" .table-view\").width($(window).width());\n    });\n}\n\nexport default {\n\tinit\n}\n"]}