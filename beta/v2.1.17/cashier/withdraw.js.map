{"version":3,"sources":["../../../../src/cashier/withdraw.es6"],"names":["require","win","win_view","error_handler","console","error","err","growl","message","Withdraw","init","li","click","Promise","all","cached","authorize","then","data","currency","local_storage","get","check_currency","_init_win","catch","moveToTop","root","i18n","createBlankWindow","title","resizable","collapsable","minimizable","maximizable","width","height","close","dialog","trigger","remove","open","destroy","unbind","_init_state","offset","top","my","left","at","css","fixFooterPosition","track","module_id","is_unique","state","is_champion","isChampionFx","clear","_","debounce","obj","prop","route","value","empty_fields","validate","token_length","show","invalid_length","invalid_text","length","verify","token","text","test","agent","instructions","menu","choice","code","disabled","transfer","account","amount","loginid","standard","url","iframe_visible","name","agents","commission","residence","checkAmount","e","scope","login_details","Cookies","loginids","reduce","a","b","id","routes","update","r","email","type","send","verify_email","notice","back","unlock","cashier","verification_code","provider","startsWith","Error","init_win","iframe_loaded","onchanged","find","paymentagent_loginid","withdrawal_commission","amount_with_commission","with_commission","toFixed","confirm_transfer","request","paymentagent_withdraw","description","submit","log","req","transfer_between_accounts","account_from","split","account_to","isAvailable","is_mlt","is_mf","is_upgradable","forEach","push","get_settings","country_code","paymentagent_list","list","payout_currencies","bind"],"mappings":"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","file":"withdraw.js","sourcesContent":["/*\n * Created by amin on July 16, 2016.\n */\n\nimport $ from 'jquery';\nimport liveapi from 'websockets/binary_websockets';\nimport windows from 'windows/windows';\nimport rv from 'common/rivetsExtra';\nimport currencyDialog from 'cashier/currency';\nimport { debounce } from 'lodash'\nimport moment from 'moment';\nimport tncApprovalWin from 'cashier/uk_funds_protection';\nimport checkAccountStatus from 'shownotice/shownotice';\nimport html from 'text!cashier/withdraw.html';\n\nrequire(['text!cashier/withdraw.html']);\nrequire(['css!cashier/withdraw.css']);\nlet win = null;\nlet win_view = null;\n\nlet error_handler = err => {\n    console.error(err);\n    $.growl.error({ message: err.message });\n};\n\nclass Withdraw {\n    init = li => {\n        li.click(() => {\n            if (!win) {\n                Promise.all([liveapi.cached.authorize(), checkAccountStatus.init(\"withdrawal\")]).then(data => {\n                    if (!data[0].authorize.currency && !local_storage.get(\"currency\")) // if currency is not set ask for currency\n                        return currencyDialog.check_currency();\n                    return true; // OK\n                }).then(() => {\n                    this._init_win(html)\n                }).catch(error_handler);\n            } else\n                win.moveToTop();\n        });\n    }\n\n    _init_win = root => {\n        root = $(root).i18n();\n        win = windows.createBlankWindow(root, {\n            title: 'Withdraw funds',\n            resizable: true,\n            collapsable: false,\n            minimizable: true,\n            maximizable: true,\n            width: 700,\n            height: 400,\n            'data-authorized': true,\n            close: () => {\n                win.dialog('destroy');\n                win.trigger('dialogclose'); // TODO: figure out why event is not fired.\n                win.remove();\n                win = null;\n            },\n            open: () => {},\n            destroy: () => {\n                win_view && win_view.unbind();\n                win_view = null;\n            }\n        });\n\n        this._init_state(root);\n        win.dialog('open');\n\n        /* update dialog position, this way when dialog is resized it will not move*/\n        var offset = win.dialog('widget').offset();\n        offset.top = 110;\n        win.dialog(\"option\", \"position\", { my: offset.left, at: offset.top });\n        win.dialog('widget').css({\n            left: offset.left + 'px',\n            top: offset.top + 'px'\n        });\n        win.fixFooterPosition();\n        win.track({\n            module_id: 'withdraw',\n            is_unique: true\n        });\n    };\n\n    _init_state = root => {\n        var state = {\n            is_champion: isChampionFx(),\n            clear: _.debounce((obj, prop) => { obj[prop] = false }, 4000),\n            route: { value: 'menu' },\n            empty_fields: {\n                validate: false,\n                token_length: false,\n                show: () => {\n                    state.empty_fields.validate = true;\n                    state.clear(state.empty_fields, 'validate');\n                }\n            },\n            validate: {\n                invalid_length: false,\n                invalid_text: false,\n                length: () => {\n                    if (state.verify.token.length != 8) {\n                        state.validate.invalid_length = true;\n                        state.clear(state.validate, 'invalid_length');\n                        return false;\n                    }\n                    return true;\n                },\n                text: () => {\n                    if (/[^1-9a-zA-Z'\\- ,.]/g.test(state.agent.instructions)) {\n                        state.validate.invalid_text = true;\n                        state.clear(state.validate, \"invalid_text\");\n                        return false;\n                    }\n                    return true;\n                }\n            },\n            menu: {\n                choice: ''\n            },\n            verify: {\n                token: '',\n                code: '',\n                disabled: false,\n            },\n            transfer: {\n                disabled: false,\n                account: '',\n                amount: '',\n                loginid: local_storage.get('authorize').loginid,\n                value: []\n            },\n            standard: {\n                url: '',\n                iframe_visible: false\n            },\n            agent: {\n                disabled: false,\n                loginid: '',\n                name: '',\n                agents: [],\n                commission: '',\n                amount: '',\n                currency: local_storage.get('authorize').currency,\n                residence: '',\n                instructions: '',\n                checkAmount: (e, scope) => {\n                    const amount = scope.agent.amount;\n                    if (amount == '') {\n                        return;\n                    }\n                    if (amount > 2000) {\n                        scope.agent.amount = 2000;\n                    }\n                    if (amount < 0) {\n                        scope.agent.amount = '';\n                    }\n                }\n            },\n            login_details: Cookies.loginids().reduce(function(a, b) {\n                if (a.id == local_storage.get(\"authorize\").loginid) return a;\n                else return b\n            })\n        };\n        let { route, menu, verify, empty_fields, standard, agent, transfer, validate } = state;\n\n        let routes = { menu: 400, verify: 400, transfer: 400, 'transfer-done': 300, standard: 400, agent: 550, 'agent-confirm': 400, 'agent-done': 300 };\n        route.update = r => {\n            route.value = r;\n            win.dialog('option', 'height', routes[r]);\n        };\n\n        menu.click = choice => { /* choice is 'transfer', 'agent' or 'standard' */\n            menu.choice = choice;\n            route.update(choice !== 'transfer' ? 'verify' : 'transfer');\n            if (choice === 'transfer')\n                return;\n            const email = local_storage.get('authorize').email;\n            const type = choice === 'agent' ? 'paymentagent_withdraw' : 'payment_withdraw';\n            liveapi.send({\n                    verify_email: email,\n                    type: type\n                })\n                .then(() => $.growl.notice({ message: 'Verification code sent to '.i18n() + email }))\n                .catch(err => {\n                    error_handler(err);\n                    route.update('menu');\n                });\n        };\n\n        verify.back = () => {\n            verify.token = verify.code = '';\n            route.update('menu');\n        };\n\n        verify.unlock = () => {\n            if (!verify.token) {\n                empty_fields.show();\n                return;\n            }\n\n            if (!validate.length()) {\n                return;\n            }\n\n            if (menu.choice === 'standard') {\n                verify.disabled = true;\n                liveapi.send({\n                        cashier: 'withdraw',\n                        verification_code: verify.token,\n                        provider: 'epg'\n                    })\n                    .then(data => {\n                        if (data.cashier.startsWith('ASK_')) { /* error code */\n                            throw new Error(data.cashier);\n                        }\n                        standard.url = data.cashier;\n                        verify.disabled = false;\n                        route.update('standard');\n                        verify.code = verify.token;\n                        verify.token = '';\n                    })\n                    .catch(err => {\n                        verify.disabled = false;\n                        if (err.code === \"ASK_UK_FUNDS_PROTECTION\") {\n                            tncApprovalWin.init_win().then().catch(err => {\n                                error_handler(err);\n                            });\n                            return;\n                        }\n                        error_handler(err);\n                    });\n            } else if (menu.choice == 'agent') {\n                verify.code = verify.token;\n                verify.token = '';\n                route.update('agent');\n            }\n        };\n\n        standard.iframe_loaded = () => {\n            if (standard.url)\n                standard.iframe_visible = true;\n        };\n\n        agent.onchanged = () => {\n            if (agent.loginid) {\n                let { withdrawal_commission, name } = agent.agents.find(a => a.paymentagent_loginid == agent.loginid);\n                agent.commission = withdrawal_commission;\n                agent.name = name;\n            } else {\n                agent.commission = '';\n                agent.name = '';\n            }\n        }\n\n        agent.amount_with_commission = () => {\n            var with_commission = (agent.amount || 0) * (100 - agent.commission) / 100;\n            return with_commission.toFixed(2);\n        }\n\n        agent.click = () => {\n            if (!agent.loginid) {\n                $.growl.error({ message: 'Please select a payment agent'.i18n() });\n                return;\n            }\n            if (!(agent.amount >= 10 && agent.amount <= 2000)) {\n                $.growl.error({ message: 'Amount Min: 10 Max: 2000'.i18n() });\n                return;\n            }\n            if (agent.instructions && !validate.text()) {\n                return;\n            }\n\n            route.update('agent-confirm');\n        }\n\n        agent.confirm_transfer = () => {\n            var request = {\n                paymentagent_withdraw: 1,\n                paymentagent_loginid: agent.loginid,\n                currency: agent.currency,\n                amount: agent.amount * 1,\n                description: agent.instructions,\n                verification_code: verify.code\n            };\n            agent.disabled = true;\n            liveapi.send(request)\n                .then(data => {\n                    route.update('agent-done')\n                    agent.disabled = false;\n                })\n                .catch(err => {\n                    agent.disabled = false;\n                    route.update('menu') // because tokens are one time use.\n                    error_handler(err);\n                });\n        }\n\n        transfer.submit = () => {\n            if (transfer.account === '' || transfer.amount === '') {\n                console.log(transfer);\n                empty_fields.show();\n                return;\n            }\n            var req = {\n                transfer_between_accounts: 1,\n                account_from: transfer.account.split(\"_to_\")[0],\n                account_to: transfer.account.split(\"_to_\")[1],\n                currency: agent.currency,\n                amount: transfer.amount\n            };\n            transfer.disabled = true;\n            liveapi.send(req)\n                .then(data => {\n                    transfer.account = transfer.account.split(\"_to_\")[1];\n                    route.update('transfer-done');\n                })\n                .catch(err => {\n                    error_handler(err);\n                    transfer.disabled = false;\n                });\n        }\n\n        transfer.isAvailable = () => {\n            if (state.login_details.is_mlt || state.login_details.is_mf) {\n                let is_upgradable = true;\n                Cookies.loginids().forEach((id) => {\n                    if (id.id !== state.login_details.id && (id.is_mf || id.is_mlt)) {\n                        is_upgradable = false;\n                        transfer.value = [{\n                            value: state.login_details.id + \"_to_\" + id.id,\n                            text: \"from account (\" + state.login_details.id +\n                                \") to account (\" + id.id + \")\"\n                        }];\n                        transfer.value.push({\n                            value: id.id + \"_to_\" + state.login_details.id,\n                            text: \"from account (\" + id.id +\n                                \") to account (\" + state.login_details.id + \")\"\n                        });\n                        transfer.account = transfer.value[0].value;\n                    }\n                });\n\n                return !is_upgradable;\n            }\n        }\n\n        liveapi.send({ get_settings: 1 })\n            .then(data => {\n                agent.residence = data.get_settings.country_code;\n                return liveapi.cached.send({ paymentagent_list: agent.residence });\n            })\n            .then(data => {\n                agent.agents = data.paymentagent_list.list;\n            })\n            .catch(error_handler);\n\n        liveapi.send({ payout_currencies: 1 })\n            .then(data => {\n                agent.currency = data.payout_currencies[0];\n            }).catch(err => console.error(err));\n        \n        win_view = rv.bind(root[0], state);\n        if(isChampionFx()){\n            menu.click(\"standard\");\n        }\n    };\n};\n\nexport default new Withdraw();\n"]}