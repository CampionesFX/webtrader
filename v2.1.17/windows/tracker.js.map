{"version":3,"sources":["../../../../src/windows/tracker.es6"],"names":["states","local_storage","get","saved_states","symbols_promise","cached","send","trading_times","Date","toISOString","slice","then","data","markets","extractChartableMarkets","symbols","map","flatten","value","catch","err","console","when_authenticated","Promise","res","is_authenticated","events","on_till","reopen_dialogs","unique_modules","assetIndex","statement","tradingTimes","download","portfolio","profitTable","token","deposit","withdraw","counter","reopen","module_id","position","mode","is_unique","is_authorized","$","click","symbol","instrumentCode","length","indexOf","tracker_id","require","chartWindow","isTrackerInitiated","addNewWindow","contracts_for","tradeDialog","dialog","init","template","offset","x","left","y","top","animate","trigger","bind","my","at","error","forEach","isArray","d","save_states","debounce","set","apply_saved_state","blankWindow","state","saved_state","pos","size","width","height","setTimeout","dialogExtend","css","track","options","attr","undefined","push","inx","findIndex","elem","splice","on","e","ui","reopen_trade_dialogs","trade_dialogs","get_trade_dialogs","cloneDeep","is_empty","ok","values","filter","s"],"mappings":"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","file":"tracker.js","sourcesContent":["/**\n * Created by amin on May 27, 2016.\n */\n\nimport windows from \"../windows/windows\";\nimport liveapi from \"../websockets/binary_websockets\";\nimport _ from \"lodash\";\nimport menu from \"../navigation/menu\";\n\nlet states = local_storage.get('states') || { };\nlet saved_states = { };\n\nconst symbols_promise = liveapi.cached\n   .send({ trading_times: new Date().toISOString().slice(0, 10) })\n   .then((data) => {\n      const markets = menu.extractChartableMarkets(data);\n      const symbols = _(markets).map('submarkets').flatten().map('instruments').flatten().map('symbol').value();\n      return symbols;\n   })\n   .catch((err) =>{\n      console.console(err);\n      return [];\n   });\n\nconst when_authenticated = () => {\n   return new Promise((res) => {\n      if (liveapi.is_authenticated()) {\n         return res();\n      }\n      liveapi.events.on_till('login',() => {\n         res();\n         return true;\n      });\n   });\n}\nconst reopen_dialogs = (symbols, saved_states) => {\n\n   const unique_modules = {\n      assetIndex: '#nav-menu .assetIndex',\n      statement: '#nav-menu .statement',\n      tradingTimes: '#nav-menu .tradingTimes',\n      download: '#nav-menu .download', // view historical data\n      portfolio: '#nav-menu .portfolio',\n      profitTable: '#nav-menu .profitTable',\n      token: '#nav-menu .token-management',\n      deposit: '#nav-menu .deposit',\n      withdraw: '#nav-menu .withdraw',\n   };\n\n   let counter = 0;\n   const reopen = (data, module_id) => {\n      if(data.position.mode === 'closed') return;\n\n      if(data.is_unique) {\n         if(data.is_authorized) {\n            when_authenticated().then(() => {\n               $(unique_modules[module_id]).click();\n               return true; // unsubscribe from login event\n            });\n         }\n         else {\n            $(unique_modules[module_id]).click();\n         }\n      }\n      else if(module_id === 'chartWindow') {\n         const symbol = data.data.instrumentCode;\n         if(symbols.length > 0 && symbols.indexOf(symbol) === -1) {\n            /* Since we get the list of ins from trading_times API,\n             * backend/quant might change the list of instruments they are offering.\n             * We just need to make sure that those charts are not getting restored. */\n            return ;\n         }\n         data.data.tracker_id = ++counter;\n         require(['charts/chartWindow'],(chartWindow) => {\n            data.data.isTrackerInitiated = true;\n            chartWindow.addNewWindow(data.data);\n         });\n      }\n      else if(module_id === 'tradeDialog') {\n         when_authenticated().then(() => {\n            data.data.tracker_id = ++counter;\n            liveapi\n               .send({contracts_for: data.data.symbol.symbol})\n               .then((res) => {\n                  require(['trade/tradeDialog'], (tradeDialog) => {\n                     const dialog = tradeDialog.init(data.data.symbol, res.contracts_for, data.data.template, true/*isTrackerInitiated*/);\n                     if(data.position.offset) {\n                        const x = data.position.offset.left;\n                        const y = data.position.offset.top;\n                        dialog.dialog('widget').animate({\n                           left: x + 'px',\n                           top: y + 'px'\n                        }, 1000, dialog.trigger.bind(dialog, 'animated'));\n                        /* update dialog option.position */\n                        dialog.dialog(\"option\", \"position\", { my: x, at: y });\n                     }\n                  });\n               }).catch(console.error.bind(console));\n            return true; // unsubscribe from login event\n         });\n      }\n      else {\n         console.error('unknown module_id ' + module_id);\n      }\n   };\n   _.forEach(saved_states,(data, module_id) => {\n      if(_.isArray(data))\n         data.forEach((d) => reopen(d, module_id))\n      else\n         reopen(data, module_id);\n   });\n}\n\n// /* avoid too many writes to local storage */\nconst save_states = _.debounce(() => local_storage.set('states', states) , 50);\n\nconst apply_saved_state = (dialog, blankWindow, state, saved_state) => {\n   const pos = saved_state.position;\n\n   pos.size && blankWindow.dialog('option', 'width', pos.size.width);\n   pos.size && blankWindow.dialog('option', 'height', pos.size.height);\n   state.position.size = pos.size;\n   state.position.mode = pos.mode;\n\n   if(pos.mode === 'maximized')\n      setTimeout(() => {\n         blankWindow.dialogExtend('maximize');\n         blankWindow.dialog('moveToTop');\n      }, 10);\n   else if(pos.mode === 'minimized')\n      blankWindow.dialogExtend('minimize');\n\n   if(pos.offset) {\n      dialog.css({\n         left: pos.offset.left + 'px',\n         top: pos.offset.top + 'px'\n      });\n      state.position.offset = pos.offset;\n   }\n\n   save_states();\n}\n\n/* options: {\n *    module_id: 'statement/statement'  // require js module id\n *    is_unique: true/false // is this dialog instance unique or not,\n *    data: { } // arbitary data object for this dialog\n * }\n * blankWindow // dialog returned from windows.createBlankWindow()\n *\n * returns: a function that can be used to update the data\n */\nexport const track = (options, blankWindow) => {\n   const dialog = blankWindow.dialog('widget');\n   let saved_state = null;\n   const state = {\n      module_id: options.module_id,\n      is_unique: options.is_unique,\n      is_authorized: blankWindow.attr('data-authorized') === 'true',\n      data: options.data,\n      position: {\n         size: { width: blankWindow.dialog('option', 'width'), height: blankWindow.dialog('option', 'height') },\n         offset: undefined,\n         mode: 'normal'\n      }\n   };\n   if(options.is_unique){\n      states[options.module_id] = state;\n      saved_state = saved_states[options.module_id];\n      if(saved_state){\n         if(saved_state.position.mode === 'closed')\n            saved_state = null;\n         delete saved_states[options.module_id];\n      }\n   }\n   else {\n      states[options.module_id] = states[options.module_id] || [];\n      states[options.module_id].push(state);\n\n      if(saved_states[options.module_id] && state.data.tracker_id !== undefined) {\n         const inx = _.findIndex(\n            saved_states[options.module_id],\n            (elem) => elem.data.tracker_id === state.data.tracker_id\n         );\n         if(inx !== -1) {\n            saved_state = saved_states[options.module_id][inx];\n            saved_states[options.module_id].splice(inx, 1);\n            if(saved_state.position.mode === 'closed')\n               saved_state = null;\n         }\n      }\n   }\n   save_states();\n   dialog.on('dragstop',() => {\n      state.position.offset = dialog.offset();\n      save_states();\n   });\n   dialog.on('animated',() => {\n      state.position.offset = dialog.offset();\n      save_states();\n   });\n   dialog.on('resizestop',(e, ui) => {\n      state.position.size = ui.size;\n      state.position.offset = dialog.offset();\n      save_states();\n   });\n   blankWindow.on('dialogextendminimize',() => {\n      state.position.mode = 'minimized';\n      save_states();\n   });\n   blankWindow.on('dialogextendmaximize',() => {\n      state.position.mode = 'maximized';\n      save_states();\n   });\n   blankWindow.on('dialogextendrestore',() => {\n      state.position.offset = dialog.offset();\n      state.position.mode = 'normal';\n      save_states();\n   });\n   blankWindow.on('dialogdestroy',() => {\n      if(state.is_unique){\n         delete states[state.module_id];\n      }\n      else {\n         if(states[state.module_id]) { /* if not already cleared by switching between accounts */\n            const inx = states[state.module_id].indexOf(state);\n            if(states[state.module_id].length == 1)\n               delete states[state.module_id];\n            else\n               states[state.module_id].splice(inx, 1);\n         }\n      }\n      save_states();\n   });\n   blankWindow.on('dialogclose',() => {\n      state.position.mode = 'closed';\n      save_states();\n   });\n   blankWindow.on('dialogopen',() => {\n      state.position.offset = dialog.offset();\n      state.position.mode = 'normal';\n      save_states();\n\n      if(saved_state){\n         apply_saved_state(dialog, blankWindow, state, saved_state);\n         saved_state = null;\n      }\n   });\n\n\n   return (data) => {\n      state.data = data;\n      save_states();\n   };\n}\n\nexport const reopen = () => {\n   symbols_promise.then((symbols) => {\n      saved_states = states;\n      states = { };\n      save_states();\n      reopen_dialogs(symbols, saved_states);\n   });\n};\n\n/* used in case of connection drops in binary_websockets onclose() function */\nexport const reopen_trade_dialogs = (trade_dialogs) => {\n   symbols_promise.then((symbols) => {\n      reopen_dialogs(symbols, {tradeDialog: trade_dialogs});\n   });\n};\n\nexport const get_trade_dialogs = () => _.cloneDeep(states.tradeDialog || []);\n\nexport const is_empty = () => {\n   const ok = _.values(states).filter(\n      (s) => (_.isArray(s) || s.position.mode !== 'closed')\n   );\n   return ok.length === 0;\n}\n\nexport default {\n   track,\n   reopen,\n   reopen_trade_dialogs,\n   get_trade_dialogs,\n   is_empty\n}\n"]}