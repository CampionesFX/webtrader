{"version":3,"sources":["../../../../../../src/charts/draw/highcharts_custom/vertical_line.es6"],"names":["verticalLineOptionsMap","init","refererChartID","H","Highcharts","chart","highcharts","options","title","i18n","inputValues","name","type","id","default","min","max","open","addEvent","css","evt","annotate","addPlotLines","xAxis","value","axis","removeEvent","uniqueID","Date","getTime","width","color","dashStyle","extend","line","addPlotLine","svgElem","attr","translate","on","updateverticalLine","removeLine","lineID","mouseUpEventAdded","wrap","Pointer","prototype","c","e","one","isInsidePlot","chartX","plotLeft","chartY","plotTop","element","toValue","stroke","removeLineWithID","call","off","removePlotLine"],"mappings":"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","file":"vertical_line.js","sourcesContent":["/**\n * Created by Arnab Karmakar on 12/7/15.\n */\n\nimport 'highstock';\nimport 'common/util';\nimport $ from 'jquery';\nimport popup from \"charts/draw/properties_selector/properties_selector\";\n\n/*\n     This is a map storing information as -\n     verticalLineOptions[seriesID] = {\n         stroke : 'red',\n         strokeWidth : 1,\n         dashStyle : 'dash',\n         parentSeriesID : seriesID\n     }\n */\nlet verticalLineOptionsMap = {};\n\n\nexport const init = function(refererChartID) {\n   const H = Highcharts;\n   //Make sure that HighStocks have been loaded\n   if (!H) return;\n\n   const chart = $(refererChartID).highcharts();\n\n   const options = {};\n   options.title = 'Vertical Line'.i18n();\n   options.inputValues = [{\n      name: 'Stroke width'.i18n(),\n      type: 'number',\n      id: 'width',\n      default: 2,\n      min: 1,\n      max: 5\n   }, {\n      name: 'Stroke color'.i18n(),\n      type: 'colorpicker',\n      id: 'color',\n      default: '#ff0000'\n   }];\n   popup.open(options, addEvent);\n\n   function addEvent(css) {\n      H.addEvent(chart, 'click', function(evt) {\n         if (chart.annotate) {\n            chart.annotate = false;\n            addPlotLines(evt.xAxis[0].value, evt.xAxis[0].axis, css);\n            H.removeEvent(chart, 'click');\n         }\n      });\n   }\n\n   function addPlotLines(value, axis, css) {\n      const uniqueID = 'verticalLine_' + new Date().getTime();\n      const options = {\n         value: value,\n         width: 2,\n         color: '#ff0000',\n         dashStyle: 'shortdash',\n         id: uniqueID\n      };\n      if (css) {\n         $.extend(options, css);\n      }\n      const line = axis.addPlotLine(options).svgElem\n         .css({ 'cursor': 'pointer' })\n         .attr('id', uniqueID)\n         .translate(0, 0)\n         .on('mousedown', updateverticalLine)\n         .on('dblclick', removeLine);\n      verticalLineOptionsMap[uniqueID] = line;\n      return line;\n   }\n\n   function updateverticalLine(evt) {\n      chart.annotate = true;\n      const lineID = $(this).attr('id');\n      let line = verticalLineOptionsMap[lineID],\n         mouseUpEventAdded = false;\n\n      H.wrap(H.Pointer.prototype, 'drag', function(c, e) {\n         if (chart.annotate) {\n            if (!mouseUpEventAdded) {\n               mouseUpEventAdded = true;\n               $(refererChartID).one(\"mouseup\", function() {\n                  chart.annotate = false;\n                  mouseUpEventAdded = false;\n               });\n            }\n            if (chart.isInsidePlot(e.chartX - chart.plotLeft, e.chartY - chart.plotTop)) {\n               if (line.element) {\n                  const value = chart.xAxis[0].toValue(e.chartX),\n                     axis = chart.xAxis[0],\n                     css = {\n                        color: line.stroke,\n                        width: line[\"stroke-width\"]\n                     };\n                  removeLineWithID(line.element.id);\n                  line = addPlotLines(value, axis, css);\n               }\n            }\n\n         } else {\n            c.call(this, e);\n         }\n      });\n   }\n\n   function removeLine(evt) {\n      const lineID = $(this).attr('id');\n      removeLineWithID(lineID)\n   }\n\n   function removeLineWithID(lineID) {\n      // Remove all associated events.\n      $(\"#\" + lineID).off();\n      delete verticalLineOptionsMap[lineID];\n      chart.xAxis[0].removePlotLine(lineID);\n   }\n\n}\n"]}