{"version":3,"sources":["../../../../src/historical-data/historical-data.es6"],"names":["dialog","buildMenu","$root","instrumentName","callback","markets","menu","map","m","display_name","submarkets","s","instruments","i","symbol","join","$menu","find","on","e","a","target","text","closest","attr","titlebar","append","buildDatetime","datetime","datepicker","changeMonth","numberOfMonths","changeYear","dateFormat","showButtonPanel","onSelect","change","update_time","beforeShow","input","inst","delay","dpDiv","css","marginLeft","top","offset","left","zIndex","minDate","utc","subtract","toDate","maxDate","closeText","i18n","currentText","toISOString","slice","timepicker","showCloseButton","tpDiv","date","val","time","result","unix","createWindow","options","options_copy","extend","title","relativePosition","dialogClass","close","chart","actions","destroy","remove","resize","reflow","width","height","open","parent","promise","done","createBlankWindow","show_chart","chartWindow","addNewChart","events","anyChange","data","instrumentCode","start","update_track","track","module_id","is_unique","init","$menuLink","click","moveToTop","timePeriod","type","showInstrumentName","showOverlays","indicators","overlays","startOf"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaA,OAAIA,SAAS,IAAb;;AAEA,OAAMC,YAAY,SAAZA,SAAY,CAACC,KAAD,EAAQC,cAAR,EAAwBC,QAAxB,EAAqC;AACpD,UAAMC,UAAU,iCAAhB;AACA,UAAMC,gBACHD,QAAQE,GAAR,CAAY;AAAA,8BAAiBC,EAAEC,YAAnB,kBACTD,EAAEE,UAAF,CAAaH,GAAb,CAAiB;AAAA,iCAAiBI,EAAEF,YAAnB,kBACdE,EAAEC,WAAF,CAAcL,GAAd,CAAkB;AAAA,wCAAoBM,EAAEC,MAAtB,gBAAsCD,EAAEJ,YAAxC;AAAA,aAAlB,EAAqFM,IAArF,CAA0F,EAA1F,CADc;AAAA,UAAjB,EAEcA,IAFd,CAEmB,EAFnB,CADS;AAAA,OAAZ,EAIcA,IAJd,CAImB,EAJnB,CADG,UAAN;AAOA,UAAMC,QAAQ,sBAAEV,IAAF,CAAd;AACAU,YAAMC,IAAN,CAAW,YAAX,EAAyBC,EAAzB,CAA4B,OAA5B,EAAqC,UAACC,CAAD,EAAGC,CAAH,EAAS;AAC3C,aAAMX,eAAe,sBAAEU,EAAEE,MAAJ,EAAYC,IAAZ,EAArB;AACA,aAAMR,SAAS,sBAAEK,EAAEE,MAAJ,EAAYE,OAAZ,CAAoB,IAApB,EAA0BC,IAA1B,CAA+B,QAA/B,CAAf;AACAC,kBAASR,IAAT,CAAc,QAAd,EAAwBK,IAAxB,CAA6Bb,YAA7B;AACAL,kBAASU,MAAT,EAAiBL,YAAjB;AACF,OALD;AAMA,UAAMgB,WAAW,oFAA0DtB,cAA1D,YAAjB;AACAD,YAAMqB,OAAN,CAAc,YAAd,EAA4BG,MAA5B,CAAmCD,QAAnC;AACAA,eAASC,MAAT,CAAgBV,KAAhB;AACAA,YAAMV,IAAN;AACF,IApBD;;AAsBA,OAAMqB,gBAAgB,SAAhBA,aAAgB,CAAC3B,MAAD,EAASE,KAAT,EAAgBE,QAAhB,EAA6B;AAC/C,UAAMwB,WAAW,iOAAjB;AAIA1B,YAAMqB,OAAN,CAAc,YAAd,EAA4BG,MAA5B,CAAmCE,QAAnC;AACAA,eAASX,IAAT,CAAc,OAAd,EACIY,UADJ,CACe;AACNC,sBAAc,IADR;AAEN;AACAC,yBAAgB,CAHV;AAINC,qBAAa,IAJP;AAKNC,qBAAa,UALP;AAMNC,0BAAkB,IANZ;AAONC,mBAAU,oBAAY;AAAE,kCAAE,IAAF,EAAQC,MAAR,GAAkBC;AAAgB,UAPpD;AAQNC,qBAAY,oBAACC,KAAD,EAAQC,IAAR,EAAiB;AAC1B,6BAAEC,KAAF,CAAQ;AAAA,sBAAMD,KAAKE,KAAL,CAAWC,GAAX,CAAe;AAC1BC,8BAAY,OADc;AAE1BC,uBAAKjB,SAASX,IAAT,CAAc,OAAd,EAAuB6B,MAAvB,GAAgCD,GAAhC,GAAsC,EAFjB;AAG1BE,wBAAMnB,SAASX,IAAT,CAAc,OAAd,EAAuB6B,MAAvB,GAAgCC,IAHZ;AAI1BC,0BAAQhD,OAAOuB,OAAP,CAAe,YAAf,EAA6BoB,GAA7B,CAAiC,SAAjC,IAA4C,CAA5C,GAAgD;AAJ9B,gBAAf,CAAN;AAAA,aAAR;AAMF,UAfK;AAgBNM,kBAAU,iBAAOC,GAAP,GAAaC,QAAb,CAAsB,CAAtB,EAAyB,OAAzB,EAAkCC,MAAlC,EAhBJ;AAiBNC,kBAAU,iBAAOH,GAAP,GAAaE,MAAb,EAjBJ;AAkBNE,oBAAW,OAAOC,IAAP,EAlBL;AAmBNC,sBAAa,QAAQD,IAAR;AAnBP,OADf,EAsBM1B,UAtBN,CAsBiB,SAtBjB,EAsB4B,iBAAOqB,GAAP,GAAaC,QAAb,CAAsB,CAAtB,EAAyB,OAAzB,EAAkCC,MAAlC,GAA2CK,WAA3C,GAAyDC,KAAzD,CAA+D,CAA/D,EAAkE,EAAlE,CAtB5B;;AAwBC9B,eAASX,IAAT,CAAc,OAAd,EACK0C,UADL,CACgB;AACTC,0BAAkB,IADT;AAETtB,qBAAY,oBAACC,KAAD,EAAQC,IAAR;AAAA,mBAAiBA,KAAKqB,KAAL,CAAWlB,GAAX,CAAe,EAACC,YAAY,QAAb,EAAf,CAAjB;AAAA,UAFH;AAGTT,mBAAU,oBAAW;AAAE,kCAAE,IAAF,EAAQC,MAAR,GAAkBC;AAAgB;AAHhD,OADhB;AAMD,UAAMA,cAAc,SAAdA,WAAc,GAAM;AACvB,aAAMyB,OAAOlC,SAASX,IAAT,CAAc,OAAd,EAAuB8C,GAAvB,EAAb;AACA,aAAMC,OAAOpC,SAASX,IAAT,CAAc,OAAd,EAAuB8C,GAAvB,EAAb;AACA,aAAME,SAAS,sBAAUH,IAAV,SAAkBE,IAAlB,aAAgC,oBAAhC,EAAsDE,IAAtD,KAA6D,CAA5E;AACA9D,qBAAYA,SAAS6D,MAAT,CAAZ;AACF,OALD;AAMH,IA1CD;AA2CO,OAAME,sCAAe,SAAfA,YAAe,CAASC,OAAT,EAAkB;AAC1C,UAAIC,eAAeD,OAAnB;AACA,UAAMlE,QAAQ,+CAAd;AACAkE,gBAAU,iBAAEE,MAAF,CAAS;AACfC,gBAAO,sBAAsBhB,IAAtB,EADQ;AAEfiB,2BAAkB,IAFH;AAGfC,sBAAa,wBAHE;AAIfC,gBAAO,iBAAW;AACdC,kBAAMC,OAAN,CAAcC,OAAd;AACA,kCAAE,IAAF,EAAQ7E,MAAR,CAAe,SAAf,EAA0B8E,MAA1B,GAFc,CAEsB;AACpC9E,qBAAS,IAAT;AACH,UARc;AASf+E,iBAAQ;AAAA,mBAAMJ,SAASA,MAAMC,OAAN,CAAcI,MAAd,EAAf;AAAA,UATO;AAUfC,gBAAO,GAVQ;AAWfC,iBAAQ,GAXO;AAYfC,eAAM,gBAAW;AACb,gBAAMnF,SAAS,sBAAE,IAAF,CAAf;AACA,kCAAE,IAAF,EAAQoF,MAAR,GAAiBC,OAAjB,GAA2BC,IAA3B,CAAgC;AAAA,sBAAMX,MAAMC,OAAN,CAAcI,MAAd,EAAN;AAAA,aAAhC;AACH;AAfc,OAAT,EAgBPZ,OAhBO,CAAV;;AAkBApE,eAAS,kBAAQuF,iBAAR,CAA0BrF,KAA1B,EAAiCkE,OAAjC,CAAT;;AAEA,UAAIO,QAAQ,IAAZ;AACA,UAAMa,aAAa,SAAbA,UAAa,GAAM;AACtBb,kBAASA,MAAMC,OAAN,CAAcC,OAAd,EAAT,CAAkCF,QAAQ,IAAR;AAClCA,iBAAQ,0BAASc,WAAT,CAAqBC,WAArB,CAAiCxF,KAAjC,EAAwCmE,YAAxC,CAAR;AACAM,eAAMC,OAAN,CAAcI,MAAd;AACAL,eAAMgB,MAAN,CAAaC,SAAb,GAAyB,YAAM;AAC5BvB,2BAAeM,MAAMkB,IAAN,EAAf;AACF,UAFD;AAGF,OAPD;AAQAL;;AAGAvF,gBAAUC,KAAV,EAAiBmE,aAAalE,cAA9B,EAA8C,UAACW,MAAD,EAASL,YAAT,EAA0B;AACrE4D,sBAAalE,cAAb,GAA8BM,YAA9B;AACA4D,sBAAayB,cAAb,GAA8BhF,MAA9B;AACA0E;AACF,OAJD;AAKA7D,oBAAc3B,MAAd,EAAsBE,KAAtB,EAA6B,UAAC6F,KAAD,EAAW;AACrC1B,sBAAa0B,KAAb,GAAqBA,KAArB;AACAP;AACF,OAHD;;AAKA,UAAMQ,eAAehG,OAAOiG,KAAP,CAAa;AAC9BC,oBAAW,gBADmB;AAE9BC,oBAAW,IAFmB;AAG9BN,eAAM;AAHwB,OAAb,CAArB;;AAMA7F,aAAOA,MAAP,CAAc,MAAd;;AAEA,aAAOA,MAAP;AACH,IAtDM;;AAwDA,OAAMoG,sBAAO,SAAPA,IAAO,YAAa;AAC9BC,gBAAUC,KAAV,CAAgB,YAAM;AACnBtG,mBAAUA,OAAOuG,SAAP,EAAV,IAAgCpC,aAAa;AAC1C2B,4BAAgB,WAD0B;AAE1C3F,4BAAgB,SAF0B;AAG1CqG,wBAAY,IAH8B;AAI1CC,kBAAM,aAJoC;AAK1CC,gCAAoB,IALsB;AAM1CC,0BAAc,KAN4B;AAO1CC,wBAAY,EAP8B;AAQ1CC,sBAAU,EARgC;AAS1Cd,mBAAO,iBAAO7C,GAAP,GAAaC,QAAb,CAAsB,CAAtB,EAAyB,OAAzB,EAAkC2D,OAAlC,CAA0C,KAA1C,EAAiD5C,IAAjD,KAAwD;AATrB,UAAb,CAAhC;AAWF,OAZD;AAaF,IAdM;;qBAgBQ,EAAEkC,UAAF,E","file":"historical-data.js","sourcesContent":["import $ from 'jquery';\nimport windows from '../windows/windows';\nimport liveapi from '../websockets/binary_websockets';\nimport moment from 'moment';\nimport 'highstock-release/modules/offline-exporting';\nimport 'common/util';\nimport wtcharts from 'webtrader-charts';\nimport html from 'text!./historical-data.html';\nimport _ from 'lodash';\nimport 'jquery-ui';\nimport 'css!./historical-data.css';\nimport {getMarketData} from '../instruments/instruments';\n\nlet dialog = null;\n\nconst buildMenu = ($root, instrumentName, callback) => {\n   const markets = getMarketData();\n   const menu = `<ul>${\n      markets.map(m => `<li><div>${m.display_name}</div><ul>${\n         m.submarkets.map(s => `<li><div>${s.display_name}</div><ul>${\n            s.instruments.map(i => `<li symbol='${i.symbol}'><div>${i.display_name}</div></li>`).join('')\n         }</ul></li>`).join('')\n      }</ul></li>`).join('')\n   }</ul>`;\n   const $menu = $(menu);\n   $menu.find('li[symbol]').on('click', (e,a) => {\n      const display_name = $(e.target).text();\n      const symbol = $(e.target).closest('li').attr('symbol');\n      titlebar.find('.title').text(display_name);\n      callback(symbol, display_name);\n   });\n   const titlebar = $(`<div class='instrumnet-dropdown' ><div class='title'>${instrumentName}</div>`);\n   $root.closest('.ui-dialog').append(titlebar);\n   titlebar.append($menu);\n   $menu.menu();\n};\n\nconst buildDatetime = (dialog, $root, callback) => {\n    const datetime = $(`<div class='date-time'>\n                    <input type=\"button\" class=\"date\" tab-index=\"-1\"></input>\n                    <input type=\"button\" class=\"time\" value=\"00:00\"></input>\n          </div>`);\n    $root.closest('.ui-dialog').append(datetime);\n    datetime.find('.date')\n       .datepicker({\n             changeMonth : true,\n             // showAnim: 'drop',\n             numberOfMonths: 1,\n             changeYear : true,\n             dateFormat : 'yy-mm-dd',\n             showButtonPanel : true,\n             onSelect: function () { $(this).change(); update_time(); },\n             beforeShow: (input, inst) => {\n                _.delay(() => inst.dpDiv.css({\n                   marginLeft: '-60px',\n                   top: datetime.find('.date').offset().top + 35,\n                   left: datetime.find('.date').offset().left,\n                   zIndex: dialog.closest('.ui-dialog').css('z-index')*1 + 1\n                }));\n             },\n             minDate : moment.utc().subtract(1, \"years\").toDate(),\n             maxDate : moment.utc().toDate(),\n             closeText: 'Done'.i18n(),\n             currentText: 'Today'.i18n()\n         })\n         .datepicker(\"setDate\", moment.utc().subtract(1, \"years\").toDate().toISOString().slice(0, 10));\n\n     datetime.find('.time')\n         .timepicker({\n            showCloseButton : true,\n            beforeShow: (input, inst) => inst.tpDiv.css({marginLeft: '-120px'}),\n            onSelect: function() { $(this).change(); update_time(); },\n         });\n    const update_time = () => {\n       const date = datetime.find('.date').val();\n       const time = datetime.find('.time').val();\n       const result = moment(`${date} ${time} +0000`, 'YYYY-MM-DD HH:mm Z').unix()*1;\n       callback && callback(result);\n    };\n};\nexport const createWindow = function(options) {\n    let options_copy = options;\n    const $root = $(html);\n    options = $.extend({\n        title: 'Historical Data For'.i18n(),\n        relativePosition: true,\n        dialogClass: 'historical-data-dialog',\n        close: function() {\n            chart.actions.destroy();\n            $(this).dialog('destroy').remove(); //completely remove this dialog\n            dialog = null;\n        },\n        resize: () => chart && chart.actions.reflow(),\n        width: 700,\n        height: 400,\n        open: function() {\n            const dialog = $(this);\n            $(this).parent().promise().done(() => chart.actions.reflow());\n        }\n    }, options);\n\n    dialog = windows.createBlankWindow($root, options);\n\n    let chart = null;\n    const show_chart = () => {\n       chart && chart.actions.destroy(); chart = null;\n       chart = wtcharts.chartWindow.addNewChart($root, options_copy);\n       chart.actions.reflow();\n       chart.events.anyChange = () => {\n          options_copy = chart.data();\n       };\n    };\n    show_chart();\n\n\n    buildMenu($root, options_copy.instrumentName, (symbol, display_name) => {\n       options_copy.instrumentName = display_name;\n       options_copy.instrumentCode = symbol;\n       show_chart();\n    });\n    buildDatetime(dialog, $root, (start) => {\n       options_copy.start = start;\n       show_chart();\n    });\n \n    const update_track = dialog.track({\n        module_id: 'historicalData',\n        is_unique: true,\n        data: null\n    });\n\n    dialog.dialog('open');\n\n    return dialog;\n};\n\nexport const init = $menuLink => {\n   $menuLink.click(() => {\n      dialog && dialog.moveToTop() || createWindow({\n         instrumentCode: 'frxAUDJPY',\n         instrumentName: 'AUD/JPY',\n         timePeriod: '1d',\n         type: 'candlestick',\n         showInstrumentName: true,\n         showOverlays: false,\n         indicators: [],\n         overlays: [],\n         start: moment.utc().subtract(1, \"years\").startOf('day').unix()*1,\n      });\n   });\n};\n\nexport default { init };\n"]}